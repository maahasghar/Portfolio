{"ast":null,"code":"import React, { Component } from \"react\";\nimport { motion, useCycle } from \"framer-motion\";\nimport \"../Card.css\";\n\nclass CardAnimate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      top,\n      left,\n      width,\n      height\n    } = this.cardRefs.current.getBoundingClientRect();\n    const cloneStyle = {\n      position: \"fixed\",\n      top: top + \"px\",\n      left: left + \"px\",\n      width: width + \"px\",\n      height: height + \"px\",\n      backgroundColor: \"red\"\n    }; // const cardStyle = {\n    //   opacity: \"0\",\n    // };\n\n    console.log(\"Maah\");\n    console.log(this.props.children);\n    return React.cloneElement(this.props.children, [this.props, cloneStartStyle, \"cloneEndCard\"], null);\n  }\n\n}\n\nexport default CardAnimate; // const CardAnimated = (props) => {\n//   const [animate, cycleCard] = useCycle(\n//     {\n//       card: { padding: \"1rem\" },\n//       image: { width: \"100%\" },\n//     },\n//     {\n//       card: { padding: \"0rem\" },\n//       image: { width: \"125%\" },\n//     }\n//   );\n//   return (\n//     <motion.div\n//       className=\"card-wrapper\"\n//       onTap={() => {\n//         cycleCard();\n//         props.onToggleFocus();\n//       }}\n//       animate={animate.card}\n//       initial={{ padding: \"1rem\" }}\n//     >\n//       <div className=\"card\">\n//         <figure className=\"card-image-container\">\n//           <div className=\"card-image-wrapper\">\n//             <motion.img\n//               className=\"card-image\"\n//               src={props.image}\n//               alt=\"\"\n//               animate={animate.image}\n//             />\n//           </div>\n//           <figcaption>\n//             Photo by <b>{props.title}</b>\n//           </figcaption>\n//         </figure>\n//       </div>\n//     </motion.div>\n//   );\n// };\n// export default CardAnimated;","map":{"version":3,"sources":["C:/Users/maaha/Desktop/Portfolio/portfolio-site/src/Components/CardAnimated.jsx"],"names":["React","Component","motion","useCycle","CardAnimate","constructor","props","state","render","top","left","width","height","cardRefs","current","getBoundingClientRect","cloneStyle","position","backgroundColor","console","log","children","cloneElement","cloneStartStyle"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC;AACA,OAAO,aAAP;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAGnBC,KAHmB,GAGX,EAHW;AAElB;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,GADI;AAEJC,MAAAA,IAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA;AAJI,QAKF,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,qBAAtB,EALJ;AAOA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,QAAQ,EAAE,OADO;AAEjBR,MAAAA,GAAG,EAAEA,GAAG,GAAG,IAFM;AAGjBC,MAAAA,IAAI,EAAEA,IAAI,GAAG,IAHI;AAIjBC,MAAAA,KAAK,EAAEA,KAAK,GAAG,IAJE;AAKjBC,MAAAA,MAAM,EAAEA,MAAM,GAAG,IALA;AAMjBM,MAAAA,eAAe,EAAE;AANA,KAAnB,CARO,CAgBP;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWe,QAAvB;AACA,WAAOrB,KAAK,CAACsB,YAAN,CACL,KAAKhB,KAAL,CAAWe,QADN,EAEL,CAAC,KAAKf,KAAN,EAAaiB,eAAb,EAA8B,cAA9B,CAFK,EAGL,IAHK,CAAP;AAKD;;AA/BiC;;AAkCpC,eAAenB,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\r\nimport { motion, useCycle } from \"framer-motion\";\r\nimport \"../Card.css\";\r\n\r\nclass CardAnimate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {};\r\n  render() {\r\n    const {\r\n      top,\r\n      left,\r\n      width,\r\n      height,\r\n    } = this.cardRefs.current.getBoundingClientRect();\r\n\r\n    const cloneStyle = {\r\n      position: \"fixed\",\r\n      top: top + \"px\",\r\n      left: left + \"px\",\r\n      width: width + \"px\",\r\n      height: height + \"px\",\r\n      backgroundColor: \"red\",\r\n    };\r\n    // const cardStyle = {\r\n    //   opacity: \"0\",\r\n    // };\r\n    console.log(\"Maah\");\r\n    console.log(this.props.children);\r\n    return React.cloneElement(\r\n      this.props.children,\r\n      [this.props, cloneStartStyle, \"cloneEndCard\"],\r\n      null\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardAnimate;\r\n\r\n// const CardAnimated = (props) => {\r\n//   const [animate, cycleCard] = useCycle(\r\n//     {\r\n//       card: { padding: \"1rem\" },\r\n//       image: { width: \"100%\" },\r\n//     },\r\n//     {\r\n//       card: { padding: \"0rem\" },\r\n//       image: { width: \"125%\" },\r\n//     }\r\n//   );\r\n//   return (\r\n//     <motion.div\r\n//       className=\"card-wrapper\"\r\n//       onTap={() => {\r\n//         cycleCard();\r\n//         props.onToggleFocus();\r\n//       }}\r\n//       animate={animate.card}\r\n//       initial={{ padding: \"1rem\" }}\r\n//     >\r\n//       <div className=\"card\">\r\n//         <figure className=\"card-image-container\">\r\n//           <div className=\"card-image-wrapper\">\r\n//             <motion.img\r\n//               className=\"card-image\"\r\n//               src={props.image}\r\n//               alt=\"\"\r\n//               animate={animate.image}\r\n//             />\r\n//           </div>\r\n//           <figcaption>\r\n//             Photo by <b>{props.title}</b>\r\n//           </figcaption>\r\n//         </figure>\r\n//       </div>\r\n//     </motion.div>\r\n//   );\r\n// };\r\n\r\n// export default CardAnimated;\r\n"]},"metadata":{},"sourceType":"module"}