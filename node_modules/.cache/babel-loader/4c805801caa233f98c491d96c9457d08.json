{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maaha\\\\Desktop\\\\Portfolio\\\\portfolio-site\\\\src\\\\Components\\\\CardAnimated.jsx\";\nimport React, { Component } from \"react\";\n\nclass CardAnimated extends Component {\n  constructor() {\n    super();\n    this.cards = document.querySelectorAll(\".card\");\n    this.state = {};\n\n    this.toggleExpansion = (element, to, duration = 350) => {\n      return new Promise(res => {\n        requestAnimationFrame(() => {\n          element.style.transition = `\n                    width ${duration}ms ease-in-out,\n                    height ${duration}ms ease-in-out,\n                    left ${duration}ms ease-in-out,\n                    top ${duration}ms ease-in-out\n                `;\n          element.style.top = to.top;\n          element.style.left = to.left;\n          element.style.width = to.width;\n          element.style.height = to.height;\n        });\n        setTimeout(res, duration);\n      });\n    };\n\n    this.getCardContent = (title, type) => {\n      return `\n            <div class=\"card-content\">\n                <h2>${title}</h2>\n                <img src=\"./assets/${type}.png\" alt=\"${title}\">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor eum ipsa molestiae nesciunt nostrum porro\n                    reprehenderit? Animi corporis deleniti dolore laborum, nemo pariatur temporibus voluptatem.\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Atque eligendi fuga ullam? Aperiam blanditiis\n                    cupiditate dicta eius exercitationem explicabo fugit, impedit iure libero nam nihil nisi perferendis\n                    provident quaerat repellendus vitae voluptate? Aliquid amet architecto asperiores aut consequuntur\n                    corporis debitis ea eveniet in maiores, nam placeat quae, ratione rerum ullam?\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor eum ipsa molestiae nesciunt nostrum porro\n                    reprehenderit? Animi corporis deleniti dolore laborum, nemo pariatur temporibus voluptatem.\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor eum ipsa molestiae nesciunt nostrum porro\n                    reprehenderit? Animi corporis deleniti dolore laborum, nemo pariatur temporibus voluptatem.\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Atque eligendi fuga ullam? Aperiam blanditiis\n                    cupiditate dicta eius exercitationem explicabo fugit, impedit iure libero nam nihil nisi perferendis\n                    provident quaerat repellendus vitae voluptate? Aliquid amet architecto asperiores aut consequuntur\n                    corporis debitis ea eveniet in maiores, nam placeat quae, ratione rerum ullam?\n                </p>\n            </div>\n        `;\n    };\n\n    this.onCardClick = async e => {\n      const card = e.currentTarget; // clone the card\n\n      const cardClone = card.cloneNode(true); // get the location of the card in the view\n\n      const {\n        top,\n        left,\n        width,\n        height\n      } = card.getBoundingClientRect(); // position the clone on top of the original\n\n      cardClone.style.position = \"fixed\";\n      cardClone.style.top = top + \"px\";\n      cardClone.style.left = left + \"px\";\n      cardClone.style.width = width + \"px\";\n      cardClone.style.height = height + \"px\"; // hide the original card with opacity\n\n      card.style.opacity = \"0\"; // add card to the same container\n\n      card.parentNode.appendChild(cardClone); // create a close button to handle the undo\n\n      const closeButton = document.createElement(\"button\"); // position the close button top corner\n\n      closeButton.style = `\n            position: fixed;\n            z-index: 10000;\n            top: 35px;\n            right: 35px;\n            width: 35px;\n            height: 35px;\n            border-radius: 50%;\n            background-color: #e25656;\n        `; // attach click event to the close button\n\n      closeButton.addEventListener(\"click\", async () => {\n        // remove the button on close\n        closeButton.remove(); // remove the display style so the original content is displayed right\n\n        cardClone.style.removeProperty(\"display\");\n        cardClone.style.removeProperty(\"padding\"); // show original card content\n\n        [...cardClone.children].forEach(child => child.style.removeProperty(\"display\"));\n        fadeContent(cardClone, \"0\"); // shrink the card back to the original position and size\n\n        await toggleExpansion(cardClone, {\n          top: `${top}px`,\n          left: `${left}px`,\n          width: `${width}px`,\n          height: `${height}px`\n        }, 300); // show the original card again\n\n        card.style.removeProperty(\"opacity\"); // remove the clone card\n\n        cardClone.remove();\n      }); // fade the content away\n\n      fadeContent(cardClone, \"0\").then(() => {\n        [...cardClone.children].forEach(child => child.style.display = \"none\");\n      }); // expand the clone card\n\n      await toggleExpansion(cardClone, {\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\"\n      });\n      const content = getCardContent(card.textContent, card.dataset.type); // set the display block so the content will follow the normal flow in case the original card is not display block\n\n      cardClone.style.display = \"block\";\n      cardClone.style.padding = \"0\"; // append the close button after the expansion is done\n\n      cardClone.appendChild(closeButton);\n      cardClone.insertAdjacentHTML(\"afterbegin\", content);\n    };\n\n    this.toggleExpansion = this.toggleExpansion.bind(this);\n    this.fadeContent = this.fadeContent.bind(this);\n    this.getCardContent = this.getCardContent.bind(this);\n    this.onCardClick = this.onCardClick.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      onClick: this.onCardClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nCardAnimated.fadeContent = (element, opacity, duration = 300) => {\n  return new Promise(res => {\n    [...element.children].forEach(child => {\n      requestAnimationFrame(() => {\n        child.style.transition = `opacity ${duration}ms linear`;\n        child.style.opacity = opacity;\n      });\n    });\n    setTimeout(res, duration);\n  });\n};\n\nexport default CardAnimated;","map":{"version":3,"sources":["C:/Users/maaha/Desktop/Portfolio/portfolio-site/src/Components/CardAnimated.jsx"],"names":["React","Component","CardAnimated","constructor","cards","document","querySelectorAll","state","toggleExpansion","element","to","duration","Promise","res","requestAnimationFrame","style","transition","top","left","width","height","setTimeout","getCardContent","title","type","onCardClick","e","card","currentTarget","cardClone","cloneNode","getBoundingClientRect","position","opacity","parentNode","appendChild","closeButton","createElement","addEventListener","remove","removeProperty","children","forEach","child","fadeContent","then","display","content","textContent","dataset","padding","insertAdjacentHTML","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nclass CardAnimated extends Component {\r\n  cards = document.querySelectorAll(\".card\");\r\n  constructor() {\r\n    super();\r\n    this.toggleExpansion = this.toggleExpansion.bind(this);\r\n    this.fadeContent = this.fadeContent.bind(this);\r\n    this.getCardContent = this.getCardContent.bind(this);\r\n    this.onCardClick = this.onCardClick.bind(this);\r\n  }\r\n  state = {};\r\n\r\n  toggleExpansion = (element, to, duration = 350) => {\r\n    return new Promise((res) => {\r\n      requestAnimationFrame(() => {\r\n        element.style.transition = `\r\n                    width ${duration}ms ease-in-out,\r\n                    height ${duration}ms ease-in-out,\r\n                    left ${duration}ms ease-in-out,\r\n                    top ${duration}ms ease-in-out\r\n                `;\r\n        element.style.top = to.top;\r\n        element.style.left = to.left;\r\n        element.style.width = to.width;\r\n        element.style.height = to.height;\r\n      });\r\n      setTimeout(res, duration);\r\n    });\r\n  };\r\n\r\n  static fadeContent = (element, opacity, duration = 300) => {\r\n    return new Promise((res) => {\r\n      [...element.children].forEach((child) => {\r\n        requestAnimationFrame(() => {\r\n          child.style.transition = `opacity ${duration}ms linear`;\r\n          child.style.opacity = opacity;\r\n        });\r\n      });\r\n      setTimeout(res, duration);\r\n    });\r\n  };\r\n\r\n  getCardContent = (title, type) => {\r\n    return `\r\n            <div class=\"card-content\">\r\n                <h2>${title}</h2>\r\n                <img src=\"./assets/${type}.png\" alt=\"${title}\">\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor eum ipsa molestiae nesciunt nostrum porro\r\n                    reprehenderit? Animi corporis deleniti dolore laborum, nemo pariatur temporibus voluptatem.\r\n                </p>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Atque eligendi fuga ullam? Aperiam blanditiis\r\n                    cupiditate dicta eius exercitationem explicabo fugit, impedit iure libero nam nihil nisi perferendis\r\n                    provident quaerat repellendus vitae voluptate? Aliquid amet architecto asperiores aut consequuntur\r\n                    corporis debitis ea eveniet in maiores, nam placeat quae, ratione rerum ullam?\r\n                </p>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor eum ipsa molestiae nesciunt nostrum porro\r\n                    reprehenderit? Animi corporis deleniti dolore laborum, nemo pariatur temporibus voluptatem.\r\n                </p>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor eum ipsa molestiae nesciunt nostrum porro\r\n                    reprehenderit? Animi corporis deleniti dolore laborum, nemo pariatur temporibus voluptatem.\r\n                </p>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Atque eligendi fuga ullam? Aperiam blanditiis\r\n                    cupiditate dicta eius exercitationem explicabo fugit, impedit iure libero nam nihil nisi perferendis\r\n                    provident quaerat repellendus vitae voluptate? Aliquid amet architecto asperiores aut consequuntur\r\n                    corporis debitis ea eveniet in maiores, nam placeat quae, ratione rerum ullam?\r\n                </p>\r\n            </div>\r\n        `;\r\n  };\r\n\r\n  onCardClick = async (e) => {\r\n    const card = e.currentTarget;\r\n    // clone the card\r\n    const cardClone = card.cloneNode(true);\r\n    // get the location of the card in the view\r\n    const { top, left, width, height } = card.getBoundingClientRect();\r\n    // position the clone on top of the original\r\n    cardClone.style.position = \"fixed\";\r\n    cardClone.style.top = top + \"px\";\r\n    cardClone.style.left = left + \"px\";\r\n    cardClone.style.width = width + \"px\";\r\n    cardClone.style.height = height + \"px\";\r\n    // hide the original card with opacity\r\n    card.style.opacity = \"0\";\r\n    // add card to the same container\r\n    card.parentNode.appendChild(cardClone);\r\n    // create a close button to handle the undo\r\n    const closeButton = document.createElement(\"button\");\r\n    // position the close button top corner\r\n    closeButton.style = `\r\n            position: fixed;\r\n            z-index: 10000;\r\n            top: 35px;\r\n            right: 35px;\r\n            width: 35px;\r\n            height: 35px;\r\n            border-radius: 50%;\r\n            background-color: #e25656;\r\n        `;\r\n\r\n    // attach click event to the close button\r\n    closeButton.addEventListener(\"click\", async () => {\r\n      // remove the button on close\r\n      closeButton.remove();\r\n      // remove the display style so the original content is displayed right\r\n      cardClone.style.removeProperty(\"display\");\r\n      cardClone.style.removeProperty(\"padding\");\r\n      // show original card content\r\n      [...cardClone.children].forEach((child) =>\r\n        child.style.removeProperty(\"display\")\r\n      );\r\n      fadeContent(cardClone, \"0\");\r\n      // shrink the card back to the original position and size\r\n      await toggleExpansion(\r\n        cardClone,\r\n        {\r\n          top: `${top}px`,\r\n          left: `${left}px`,\r\n          width: `${width}px`,\r\n          height: `${height}px`,\r\n        },\r\n        300\r\n      );\r\n      // show the original card again\r\n      card.style.removeProperty(\"opacity\");\r\n      // remove the clone card\r\n      cardClone.remove();\r\n    });\r\n\r\n    // fade the content away\r\n    fadeContent(cardClone, \"0\").then(() => {\r\n      [...cardClone.children].forEach(\r\n        (child) => (child.style.display = \"none\")\r\n      );\r\n    });\r\n    // expand the clone card\r\n    await toggleExpansion(cardClone, {\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n    });\r\n    const content = getCardContent(card.textContent, card.dataset.type);\r\n    // set the display block so the content will follow the normal flow in case the original card is not display block\r\n    cardClone.style.display = \"block\";\r\n    cardClone.style.padding = \"0\";\r\n    // append the close button after the expansion is done\r\n    cardClone.appendChild(closeButton);\r\n    cardClone.insertAdjacentHTML(\"afterbegin\", content);\r\n  };\r\n\r\n  render() {\r\n    return <i onClick={this.onCardClick}></i>;\r\n  }\r\n}\r\n\r\nexport default CardAnimated;\r\n"]},"metadata":{},"sourceType":"module"}